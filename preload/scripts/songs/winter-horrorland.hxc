import flixel.FlxSprite;
import flixel.FlxG;
import flixel.util.FlxTimer;
import flixel.tweens.FlxTween;
import flixel.tweens.FlxEase;

import funkin.play.PlayState;
import funkin.play.song.Song;
import funkin.audio.FunkinSound;
import funkin.Paths;

import funkin.play.PlayStatePlaylist;

class WinterHorrorlandSong extends Song {
  var hasPlayedCutscene:Bool;

  public function new() {
	  super('winter-horrorland');

    hasPlayedCutscene = false;
	}

  public override function onCountdownStart(event:CountdownScriptEvent):Void {
		super.onCountdownStart(event);

    if (!PlayStatePlaylist.isStoryMode){
      hasPlayedCutscene = true;
    }

    if(!hasPlayedCutscene) {
      trace('Pausing countdown to play in game cutscene');
      hasPlayedCutscene = true;

      event.cancel(); // CANCEL THE COUNTDOWN!

      playHorrorStartCutscene();
    }
  }

  var blackScreen:FlxSprite;

  var TWEEN_DURATION:Float = 2.0;

  function playHorrorStartCutscene()
  {
    PlayState.instance.isInCutscene = true;
    PlayState.instance.camHUD.visible = false;

    blackScreen = new FlxSprite(-200, -200).makeGraphic(FlxG.width * 2, FlxG.height * 2, 0xFF000000);
    blackScreen.scrollFactor.set(0, 0);
    blackScreen.zIndex = 1000000;
    PlayState.instance.add(blackScreen);

    new FlxTimer().start(0.1, function() {
      trace('Playing horrorland cutscene...');
      PlayState.instance.remove(blackScreen);

      // Force set the camera position and zoom.
      PlayState.instance.cameraFollowPoint.setPosition(400, -2050);
      PlayState.instance.resetCamera();
      FlxG.camera.zoom = 2.5;

      // Play the Sound effect.
      FunkinSound.playOnce(Paths.sound('Lights_Turn_On'), 1, function() {
        // Fade in the HUD.
        trace('SFX done...');
        PlayState.instance.camHUD.visible = true;
        PlayState.instance.camHUD.alpha = 0.0; // Use alpha rather than visible to let us fade it in.
        FlxTween.tween(PlayState.instance.camHUD, {alpha: 1.0}, TWEEN_DURATION, {ease: FlxEase.quadInOut});

        // Start the countdown.
        trace('Zoom out done...');
        trace('Begin countdown (ends cutscene)');
        PlayState.instance.startCountdown();
      });
    });
  }

  /**
   * Don't replay the cutscene between restarts.
   */
  function onSongRetry(event:ScriptEvent)
  {
    super.onSongRetry(event);

    hasPlayedCutscene = true;
  }

  /**
   * Replay the cutscene after leaving the song.
   */
  function onCreate(event:ScriptEvent):Void
  {
    super.onCreate(event);

    hasPlayedCutscene = false;
  }
}
